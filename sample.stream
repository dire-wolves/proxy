http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstream groups for backend services
    upstream backend_service_1 {
        server backend1.example.com:8080;
        server backend2.example.com:8080;
    }

    upstream backend_service_2 {
        server backend3.example.com:8080;
        server backend4.example.com:8080;
    }

    server {
        listen 80;

        # Route requests starting with /service1 to backend_service_1
        location /service1/ {
            proxy_pass http://backend_service_1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route requests starting with /service2 to backend_service_2
        location /service2/ {
            proxy_pass http://backend_service_2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}